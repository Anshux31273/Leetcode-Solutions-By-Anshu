class Solution {
public:
    void dfs(vector<int>& vis, vector<int> adj[], int node)
    {
        vis[node] = 1;
        for(auto i : adj[node])
        {
            if(!vis[i])
            {
                dfs(vis, adj, i);
            }
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int V = isConnected.size();
        vector<int> adj[V];
        for(int i = 0;i < V;i ++)
        {
            for(int j = 0;j < V;j ++){
                if(isConnected[i][j] == 1 && i != j)
                {
                    adj[i].push_back(j);
                    adj[j].push_back(i);
                }
            }
        }
        vector<int> vis(V, 0);
        int res = 0;
        for(int i = 0;i < V;i ++)
        {
            if(!vis[i])
            {
                res ++;
                dfs(vis, adj, i);
            }
        }
        return res;
    }
};
